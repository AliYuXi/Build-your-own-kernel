# 文件名: .github/workflows/trigger_on_external_build.yml
name: Trigger Kernel Build on SukiSU-Ultra Update or Manual Dispatch

on:
  workflow_run:
    workflows: ["Build Manager CI/CD"]
    repository: ShirkNeko/SukiSU-Ultra
    types:
      - completed
  workflow_dispatch:

jobs:
  trigger_kernel_workflow:
    name: Trigger Local Kernel Build
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # 需要此权限来触发其他工作流

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Trigger build-kernel.yml
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TRIGGER_PAT }} # 确保这个 PAT 有 workflow 权限
        run: |
          # 使用 ${{ github.event_name }} 来获取正确的事件名称
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "监听到 ShirkNeko/SukiSU-Ultra 仓库的 'Build Manager CI/CD' 工作流成功完成。"
            echo "触发者: ${{ github.event.workflow_run.actor.login }}"
            echo "外部工作流运行 ID: ${{ github.event.workflow_run.id }}"
            echo "外部工作流提交 SHA: ${{ github.event.workflow_run.head_sha }}"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "工作流由 ${{ github.actor }} 手动触发。"
          fi

          echo "正在尝试触发本地的 'build-kernel.yml' 工作流..."

          # 检查目标工作流文件是否存在 (可选的调试步骤)
          # echo "检查目标工作流文件在 ${{ github.ref }} 分支上的路径: .github/workflows/build-kernel.yml"
          # 如果你的 build-kernel.yml 不在 ${{ github.ref }} 指定的分支，你需要修改 --ref 参数
          # 例如，如果 build-kernel.yml 总是在 main 分支:
          # TARGET_REF="main"
          # 或者，如果你想使用当前此工作流运行所在的分支:
          TARGET_REF="${{ github.ref }}"

          echo "将在分支 ${TARGET_REF} 上触发 build-kernel.yml"

          # 使用 GitHub CLI (gh) 来触发仓库中的 'build-kernel.yml' 工作流
          # 确保 'build-kernel.yml' 文件确实存在于你仓库的 .github/workflows/ 目录下，
          # 并且位于你通过 --ref 指定的分支上。
          # 如果 build-kernel.yml 有一个 'name' 属性，你也可以使用那个名称。
          gh workflow run build-kernel.yml --ref ${TARGET_REF}

          # 如果上面的命令因为权限问题失败（即使有 PAT），并且 build-kernel.yml 在同一个仓库，
          # 你可以尝试使用 API 调用，但这更复杂。gh CLI 通常是首选。

          echo "已发送 'build-kernel.yml' 的触发命令。"
          echo "你可以在 Actions 标签页查看 'build-kernel.yml' 的运行状态。"
