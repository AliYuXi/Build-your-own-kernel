name: 清理旧的工作流运行记录
on:
  schedule:
    - cron: '0 */24 * * *'
  workflow_dispatch:
    inputs:
      days:
        description: '为每个工作流保留的运行记录天数'
        required: true
        default: '7'
        type: string
      minimum_runs:
        description: '为每个工作流保留的最小运行次数'
        required: true
        default: '6'
        type: string
      delete_workflow_pattern:
        description: '要清理的工作流名称或文件名 (如果未设置，则针对所有工作流)'
        required: false
        type: string
      delete_workflow_by_state_pattern:
        description: '按工作流状态筛选: active, deleted, disabled_fork, disabled_inactivity, disabled_manually'
        required: false
        default: "ALL"
        type: choice
        options:
          - "ALL"
          - active
          - deleted
          - disabled_inactivity
          - disabled_manually
      delete_run_by_conclusion_pattern:
        description: '按运行结论移除运行记录: action_required, cancelled, failure, skipped, success'
        required: false
        default: "ALL"
        type: choice
        options:
          - "ALL"
          - "Unsuccessful: action_required,cancelled,failure,skipped"
          - action_required
          - cancelled
          - failure
          - skipped
          - success
      dry_run:
        description: '记录模拟的更改，不执行实际删除操作'
        required: false
        default: false
        type: boolean

jobs:
  cleanup_workflow_runs:
    name: 删除旧的工作流运行记录作业
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: 运行 Mattraks 删除工作流运行记录操作
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: ${{ github.event_name == 'schedule' && 0 || github.event.inputs.days }}
          keep_minimum_runs: ${{ github.event_name == 'schedule' && 5 || github.event.inputs.minimum_runs }}
          delete_workflow_pattern: ${{ github.event_name == 'schedule' && '' || github.event.inputs.delete_workflow_pattern }}
          delete_workflow_by_state_pattern: ${{ github.event_name == 'schedule' && 'ALL' || github.event.inputs.delete_workflow_by_state_pattern }}
          delete_run_by_conclusion_pattern: ${{ github.event_name == 'schedule' && 'ALL' || (startsWith(github.event.inputs.delete_run_by_conclusion_pattern, 'Unsuccessful:') && 'action_required,cancelled,failure,skipped' || github.event.inputs.delete_run_by_conclusion_pattern) }}
          dry_run: ${{ github.event_name == 'schedule' && false || github.event.inputs.dry_run }}