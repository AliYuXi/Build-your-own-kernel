# .github/workflows/poll-external-build-manager.yml
name: A 编译内核

on:
  # 手动触发
  workflow_dispatch:
    inputs:
      kernelsu_variant:
        description: "选择 KernelSU"
        required: true
        type: choice
        options:
          - Official
          - Next
          - MKSU
          - SukiSU
        default: SukiSU
      kernelsu_branch:
        description: "选择 ksu 分支"
        required: true
        type: choice
        options:
          - Stable(标准)
          - Dev(开发)
          - Other(其他/指定)
        default: Dev(开发)
      version:
        description: '自定义版本后缀，留空随机生成'
        required: false
        type: string
      use_zram:
        description: '是否开启增加更多ZRAM算法?'
        required: true
        type: boolean
        default: true
      use_kpm:
        description: '是否开启KPM功能?'
        required: true
        type: boolean
        default: true

  # 定时触发：每小时检查一次
  schedule:
    - cron: '*/30 * * * *'

permissions:
  contents: write    # 读取本仓库及对方仓库文件元数据
  actions: write    # 触发下游工作流
  

jobs:
  prepare_version_string:
    runs-on: ubuntu-latest
    outputs:
      final_version: ${{ steps.gen.outputs.version_string }}
    steps:
      - name: Generate or Use Custom Version String
        id: gen
        env:
          USER_PROVIDED_VERSION: ${{ github.event.inputs.version }}
        run: |
          if [[ -n "$USER_PROVIDED_VERSION" ]]; then
            echo "version_string=$USER_PROVIDED_VERSION" >> "$GITHUB_OUTPUT"
          else
            FIXED_PART="-android14-11"
            PREFIX1="gd"
            PREFIX2="ab"
            RANDOM_HEX=$(head /dev/urandom | tr -dc 'a-f0-9' | head -c11)
            RANDOM_DIGITS=$(head /dev/urandom | tr -dc '0-9' | head -c8)
            VS="${FIXED_PART}-${PREFIX1}${RANDOM_HEX}-${PREFIX2}${RANDOM_DIGITS}"
            echo "version_string=$VS" >> "$GITHUB_OUTPUT"
          fi

  check-external-file:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.compare.outputs.changed }}
    steps:
      - name: Fetch remote build-manager.yml metadata
        id: fetch
        uses: octokit/request-action@v2.1.0
        with:
          route: GET /repos/ShirkNeko/SukiSU-Ultra/contents/.github/workflows/build-manager.yml

      - name: Extract remote SHA
        id: extract
        run: |
          echo "sha=$(echo '${{ steps.fetch.outputs.data }}' | jq -r .sha)" >> "$GITHUB_OUTPUT"

      - name: Read last SHA from Gist
        id: gist-read
        uses: peter-evans/gist-action@v2
        with:
          gist_id: ${{ secrets.LAST_SHA_GIST_ID }}
          file: last_sha.txt

      - name: Compare SHAs
        id: compare
        run: |
          PREV=$(echo '${{ steps.gist-read.outputs.content }}' | tr -d '[:space:]')
          CURR=${{ steps.extract.outputs.sha }}
          if [[ "$PREV" != "$CURR" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update Gist with new SHA
        if: steps.compare.outputs.changed == 'true'
        uses: peter-evans/gist-action@v2
        with:
          gist_id: ${{ secrets.LAST_SHA_GIST_ID }}
          files: |
            last_sha.txt: ${{ steps.extract.outputs.sha }}

  build-on-update:
    needs:
      - prepare_version_string
      - check-external-file
    if: needs.check-external-file.outputs.changed == 'true'
    uses: ./.github/workflows/kernel-a14-6.1.yml
    secrets: inherit
    with:
      make_release: false
      kernelsu_variant: ${{ github.event.inputs.kernelsu_variant || 'SukiSU' }}
      kernelsu_branch:  ${{ github.event.inputs.kernelsu_branch  || 'Dev(开发)' }}
      version:         ${{ needs.prepare_version_string.outputs.final_version }}
      use_zram:        ${{ github.event.inputs.use_zram           || true }}
      use_kpm:         ${{ github.event.inputs.use_kpm            || true }}